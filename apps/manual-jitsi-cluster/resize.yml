---
# resize instances

- name: resizing jvb instances down
  hosts: localhost
  connection: local
  vars_files:
      - group_vars/jitsi/vars
      - group_vars/jitsi/secret_vars
  vars:
    jvb_count: '{{ jvb_cluster_size }}'        
  
  tasks:

  - name: checking cluster size
    fail:
      msg: |
        The desired cluster size is larger than what currently exist.
        The current size is {{ original_jvb_cluster_size }} and we want {{ jvb_count }}
    when: jvb_count | int >= original_jvb_cluster_size

  - name: deleting jvb instances
    linode.cloud.instance:
      label: '{{ jvb_prefix }}{{ original_jvb_cluster_size - index }}'
      api_token: '{{ api_token }}'
      state: absent
    with_sequence: count='{{ original_jvb_cluster_size - jvb_cluster_size | int | abs }}'
    loop_control:
      index_var: index

  - name: get info about jitsi JVB instances
    linode.cloud.instance_info:
      api_token: '{{ api_token }}'
      label: '{{ jvb_prefix }}{{ item }}'
    register: jvb_info
    with_sequence: count='{{ jvb_count }}'

  - name: updating group vars
    blockinfile:
      path: ./group_vars/jitsi/vars
      marker: "# {mark} JVB VARS"
      block: |
        #jinja2: trim_blocks:False
            jvb:
            {%- for count in range(jvb_cluster_size | int) %}
              - jvb-{{ count + 1 }}:
                instance:
                  hostname: jvb{{ count + 1 }}
                  jitsi_ip1: {{ jvb_info.results[count].instance.ipv4[0] }}
                  ip_priv1: {{ jvb_info.results[count].instance.ipv4[1] }}
            {%- endfor %}

  - name: update inventory
    blockinfile:
      path: ./hosts
      marker: "# {mark} JVB HOST"
      block: |
        #jinja2: trim_blocks:False
        [jvb_servers]
        {%- for count in range(jvb_cluster_size | int) %}
        {{ jvb_info.results[count].instance.ipv4[0] }}
        {%- endfor %}
